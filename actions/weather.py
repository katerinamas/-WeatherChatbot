# -*- coding: utf-8 -*-
"""weather.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xLMZ-C5WBahDHNz1S3sNLKWR_zIAqMCl
"""

import os
import requests

# Function to get weather data for any city
def weather_city(city, use_API=True):
    if use_API:
        API_key = "ba43f81018a4235cae43d908ffd117d6" #Set your API key
        if not API_key:
            return {"error": "API key is missing. Please check your configuration."}

        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_key}&units=metric"
        try:
            response = requests.get(url)
            data = response.json()

            if response.status_code != 200:
                return {"error": f"Failed to fetch weather: {data.get('message', 'Unknown error')}"}

            return {
                "city": data["name"],
                "country": data["sys"]["country"],
                "temperature": data["main"]["temp"],
                "feels_like": data["main"]["feels_like"],
                "humidity": data["main"]["humidity"],
                "wind_speed": data["wind"]["speed"],
                "weather": data["weather"][0]["description"],
                "sunrise": data["sys"]["sunrise"],
                "sunset": data["sys"]["sunset"]
            }

        except requests.exceptions.RequestException as e:
            return {"error": f"API request error: {e}"}

    else:
        static_data = {
            "New York": {"city": "New York", "temperature": 20.13, "weather": "clear sky"},
            "Athens": {"city": "Los Angeles", "temperature": 17.56, "weather": "clear sky"},
            "Paris": {"city": "Chicago", "temperature": 16.0, "weather": "scattered clouds"},
        }
        return static_data.get(city, {"error": "City not found in static data."})

# Run the function as a standalone script
if __name__ == "__main__":
    city_name = input("Enter city name: ")
    weather_info = weather_city(city_name, use_API=True)
    print(weather_info)